// <auto-generated />
using System;
using HueFestivalAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HueFestivalAPI.Migrations
{
    [DbContext(typeof(HueFestivalContext))]
    [Migration("20230512074242_updateDB5")]
    partial class updateDB5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HueFestivalAPI.Models.Account", b =>
                {
                    b.Property<int>("IdAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccount"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdQuyen")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdAccount");

                    b.HasIndex("IdQuyen");

                    b.HasIndex("Email", "PhoneNumber")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Checkin", b =>
                {
                    b.Property<int>("IdCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCheckin"), 1L, 1);

                    b.Property<DateTime>("DateCheckin")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdThongTin")
                        .HasColumnType("int");

                    b.HasKey("IdCheckin");

                    b.HasIndex("IdThongTin");

                    b.ToTable("Checkin");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChiTietDiemBanVe", b =>
                {
                    b.Property<int>("IdChiTietDiemBanVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChiTietDiemBanVe"), 1L, 1);

                    b.Property<int>("IdDiemBanVe")
                        .HasColumnType("int");

                    b.Property<int>("IdVe")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdChiTietDiemBanVe");

                    b.HasIndex("IdDiemBanVe");

                    b.HasIndex("IdVe");

                    b.ToTable("ChiTietDiemBanVe");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChucNang", b =>
                {
                    b.Property<int>("IdChucNang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChucNang"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdChucNang");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ChucNang");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinh", b =>
                {
                    b.Property<int>("IdChuongTrinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChuongTrinh"), 1L, 1);

                    b.Property<int>("Arrange")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Md5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeInOff")
                        .HasColumnType("int");

                    b.Property<int>("TypeProgram")
                        .HasColumnType("int");

                    b.HasKey("IdChuongTrinh");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ChuongTrinh");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinhDetails", b =>
                {
                    b.Property<int>("IdDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetails"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdChuongTrinh")
                        .HasColumnType("int");

                    b.Property<int>("IdDiaDiem")
                        .HasColumnType("int");

                    b.Property<int?>("IdDoan")
                        .HasColumnType("int");

                    b.Property<int>("IdNhom")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("IdDetails");

                    b.HasIndex("IdChuongTrinh");

                    b.HasIndex("IdDiaDiem");

                    b.HasIndex("IdDoan");

                    b.HasIndex("IdNhom");

                    b.ToTable("ChuongTrinhDetails");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinhImage", b =>
                {
                    b.Property<int>("IdImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImage"), 1L, 1);

                    b.Property<int>("IdChuongTrinh")
                        .HasColumnType("int");

                    b.Property<string>("PathImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdImage");

                    b.HasIndex("IdChuongTrinh");

                    b.ToTable("ChuongTrinhImage");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiem", b =>
                {
                    b.Property<int>("IdDiaDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiaDiem"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<int>("IdSubMenu")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longtitude")
                        .HasColumnType("float");

                    b.Property<string>("PathImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeData")
                        .HasColumnType("int");

                    b.HasKey("IdDiaDiem");

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdSubMenu");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("DiaDiem");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiemMenu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"), 1L, 1);

                    b.Property<string>("PathIcon")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeData")
                        .HasColumnType("int");

                    b.HasKey("IdMenu");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("DiaDiemMenu");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiemSubMenu", b =>
                {
                    b.Property<int>("IdSubMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubMenu"), 1L, 1);

                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<string>("PathIcon")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeData")
                        .HasColumnType("int");

                    b.HasKey("IdSubMenu");

                    b.HasIndex("IdMenu");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("DiaDiemSubMenu");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiemBanVe", b =>
                {
                    b.Property<int>("IdDiemBanVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiemBanVe"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longtitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdDiemBanVe");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DiemBanVe");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DoanChuongTrinh", b =>
                {
                    b.Property<int>("IdDoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoan"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdDoan");

                    b.ToTable("DoanChuongTrinh");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.KhachHang", b =>
                {
                    b.Property<int>("IdKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKhachHang"), 1L, 1);

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoCMND")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdKhachHang");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.LoaiVe", b =>
                {
                    b.Property<int>("IdLoaiVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLoaiVe"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdLoaiVe");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LoaiVe");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.MenuHoTro", b =>
                {
                    b.Property<int>("IdHoTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHoTro"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdHoTro");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("MenuHoTro");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.NhomChuongTrinh", b =>
                {
                    b.Property<int>("IdNhom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNhom"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdNhom");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NhomChuongTrinh");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.PhanQuyenChucNang", b =>
                {
                    b.Property<int>("IdQuyen")
                        .HasColumnType("int");

                    b.Property<int>("IdChucNang")
                        .HasColumnType("int");

                    b.HasKey("IdQuyen", "IdChucNang");

                    b.HasIndex("IdChucNang");

                    b.ToTable("PhanQuyenChucNang");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Quyen", b =>
                {
                    b.Property<int>("IdQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQuyen"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdQuyen");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ThongTinDatVe", b =>
                {
                    b.Property<int>("IdThongTin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdThongTin"), 1L, 1);

                    b.Property<int?>("ChiTietDiemBanVeIdChiTietDiemBanVe")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdVe")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangIdKhachHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoCMND")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdThongTin");

                    b.HasIndex("ChiTietDiemBanVeIdChiTietDiemBanVe");

                    b.HasIndex("IdVe");

                    b.HasIndex("KhachHangIdKhachHang");

                    b.ToTable("ThongTinDatVe");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.TinTuc", b =>
                {
                    b.Property<int>("IdTinTuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTinTuc"), 1L, 1);

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<int>("Arrange")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFocus")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHome")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longtitude")
                        .HasColumnType("int");

                    b.Property<int?>("OtherTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PathFile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PathImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Video")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.HasKey("IdTinTuc");

                    b.HasIndex("IdAccount");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Ve", b =>
                {
                    b.Property<int>("IdVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVe"), 1L, 1);

                    b.Property<decimal>("GiaVe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdDetails")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiVe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhatHanh")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdVe");

                    b.HasIndex("IdDetails");

                    b.HasIndex("IdLoaiVe");

                    b.ToTable("Ve");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Account", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.Quyen", "Quyen")
                        .WithMany("Accounts")
                        .HasForeignKey("IdQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quyen");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Checkin", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.ThongTinDatVe", "ThongTinDatVe")
                        .WithMany("Checkins")
                        .HasForeignKey("IdThongTin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThongTinDatVe");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChiTietDiemBanVe", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.DiemBanVe", "DiemBanVe")
                        .WithMany("ChiTietDiemBanVes")
                        .HasForeignKey("IdDiemBanVe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.Ve", "Ve")
                        .WithMany("ChiTietDiemBanVes")
                        .HasForeignKey("IdVe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiemBanVe");

                    b.Navigation("Ve");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinhDetails", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.ChuongTrinh", "ChuongTrinh")
                        .WithMany("ChuongTrinhDetails")
                        .HasForeignKey("IdChuongTrinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.DiaDiem", "DiaDiem")
                        .WithMany("ChuongTrinhDetails")
                        .HasForeignKey("IdDiaDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.DoanChuongTrinh", "DoanChuongTrinh")
                        .WithMany("ChuongTrinhDetails")
                        .HasForeignKey("IdDoan");

                    b.HasOne("HueFestivalAPI.Models.NhomChuongTrinh", "NhomChuongTrinh")
                        .WithMany("ChuongTrinhDetails")
                        .HasForeignKey("IdNhom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuongTrinh");

                    b.Navigation("DiaDiem");

                    b.Navigation("DoanChuongTrinh");

                    b.Navigation("NhomChuongTrinh");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinhImage", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.ChuongTrinh", "ChuongTrinh")
                        .WithMany("ChuongTrinhImages")
                        .HasForeignKey("IdChuongTrinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuongTrinh");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiem", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.Account", "Account")
                        .WithMany("DiaDiems")
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.DiaDiemSubMenu", "DiaDiemSubMenu")
                        .WithMany("DiaDiems")
                        .HasForeignKey("IdSubMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("DiaDiemSubMenu");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiemSubMenu", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.DiaDiemMenu", "DiaDiemMenu")
                        .WithMany("DiaDiemSubMenus")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaDiemMenu");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.PhanQuyenChucNang", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.ChucNang", "ChucNang")
                        .WithMany("PhanQuyenChucNangs")
                        .HasForeignKey("IdChucNang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.Quyen", "Quyen")
                        .WithMany("PhanQuyenChucNangs")
                        .HasForeignKey("IdQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucNang");

                    b.Navigation("Quyen");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ThongTinDatVe", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.ChiTietDiemBanVe", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("ChiTietDiemBanVeIdChiTietDiemBanVe");

                    b.HasOne("HueFestivalAPI.Models.Ve", "Ve")
                        .WithMany("ThongTinDatVes")
                        .HasForeignKey("IdVe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.KhachHang", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangIdKhachHang");

                    b.Navigation("Ve");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.TinTuc", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.Account", "Account")
                        .WithMany("TinTucs")
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Ve", b =>
                {
                    b.HasOne("HueFestivalAPI.Models.ChuongTrinhDetails", "ChuongTrinhDetails")
                        .WithMany("Ves")
                        .HasForeignKey("IdDetails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueFestivalAPI.Models.LoaiVe", "LoaiVe")
                        .WithMany("Ves")
                        .HasForeignKey("IdLoaiVe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuongTrinhDetails");

                    b.Navigation("LoaiVe");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Account", b =>
                {
                    b.Navigation("DiaDiems");

                    b.Navigation("TinTucs");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChiTietDiemBanVe", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChucNang", b =>
                {
                    b.Navigation("PhanQuyenChucNangs");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinh", b =>
                {
                    b.Navigation("ChuongTrinhDetails");

                    b.Navigation("ChuongTrinhImages");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ChuongTrinhDetails", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiem", b =>
                {
                    b.Navigation("ChuongTrinhDetails");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiemMenu", b =>
                {
                    b.Navigation("DiaDiemSubMenus");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiaDiemSubMenu", b =>
                {
                    b.Navigation("DiaDiems");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DiemBanVe", b =>
                {
                    b.Navigation("ChiTietDiemBanVes");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.DoanChuongTrinh", b =>
                {
                    b.Navigation("ChuongTrinhDetails");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.LoaiVe", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.NhomChuongTrinh", b =>
                {
                    b.Navigation("ChuongTrinhDetails");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Quyen", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("PhanQuyenChucNangs");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.ThongTinDatVe", b =>
                {
                    b.Navigation("Checkins");
                });

            modelBuilder.Entity("HueFestivalAPI.Models.Ve", b =>
                {
                    b.Navigation("ChiTietDiemBanVes");

                    b.Navigation("ThongTinDatVes");
                });
#pragma warning restore 612, 618
        }
    }
}
